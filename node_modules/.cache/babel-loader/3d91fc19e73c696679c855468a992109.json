{"ast":null,"code":"import _slicedToArray from \"/Users/learnacademy/Desktop/tic-tac-toe-team-chuck-david-ryan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe-team-chuck-david-ryan/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport Message from './components/Message';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLocation = indexLocation => {\n      let _this$state = this.state,\n          squares = _this$state.squares,\n          turns = _this$state.turns;\n\n      if (turns === 9) {\n        alert(\"Game Over\");\n      } else if (squares[indexLocation] === \"x\" || squares[indexLocation] === \"o\") {\n        alert(\"Already Selected\");\n      } else {\n        if (turns % 2 === 0) {\n          squares[indexLocation] = \"x\";\n        } else {\n          squares[indexLocation] = \"o\";\n        }\n\n        this.setState({\n          squares: squares\n        });\n        turns += 1;\n        this.setState({\n          turns: turns\n        });\n        console.log(squares);\n      }\n    };\n\n    this.checkWinner = () => {\n      let squares = this.state.squares;\n      const winningCombo = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < winningCombo.length; i++) {\n        const _winningCombo$i = _slicedToArray(winningCombo[i], 3),\n              a = _winningCombo$i[0],\n              b = _winningCombo$i[1],\n              c = _winningCombo$i[2];\n\n        console.log(winningCombo[i]);\n        let winner = squares[a];\n\n        if (squares[a] === squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return winner;\n        }\n      }\n    };\n\n    this.gameResult = () => {\n      let _this$state2 = this.state,\n          squares = _this$state2.squares,\n          turns = _this$state2.turns;\n      let winner = this.checkWinner;\n\n      if (winner === \"x\" || winner === \"o\") {\n        alert(winner + 'is the winner');\n      } else if (turns === squares.length) {\n        alert(\"Cats Game\");\n      }\n    };\n\n    this.state = {\n      squares: [...Array(9).fill(\"\")],\n      turns: 0\n    };\n  }\n\n  render() {\n    let _this$state3 = this.state,\n        squares = _this$state3.squares,\n        turns = _this$state3.turns;\n    let square = squares.map((square, index) => {\n      return React.createElement(Square, {\n        handleLocation: this.handleLocation,\n        xoMark: square,\n        index: index,\n        checkWinner: this.checkWinner,\n        gameResult: this.gameResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Tic Tac Toe\"), React.createElement(\"div\", {\n      id: \"gameBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, square), React.createElement(Message, {\n      gameResult: this.gameResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/tic-tac-toe-team-chuck-david-ryan/src/App.js"],"names":["React","Component","Square","Message","App","constructor","props","handleLocation","indexLocation","state","squares","turns","alert","setState","console","log","checkWinner","winningCombo","i","length","a","b","c","winner","gameResult","Array","fill","render","square","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Square from './components/Square'\nimport Message from './components/Message'\nimport './App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      squares: [...Array(9).fill(\"\")],\n      turns: 0\n    }\n  }\n\n  handleLocation = (indexLocation) => {\n    let { squares, turns } = this.state\n    if (turns === 9) {\n      alert(\"Game Over\")\n    }\n    else if (squares[indexLocation] === \"x\" || squares[indexLocation] === \"o\") {\n      alert(\"Already Selected\")\n    }\n    else {\n      if (turns % 2 === 0) {\n        squares[indexLocation] = \"x\"\n      }\n      else {\n        squares[indexLocation] = \"o\"\n      }\n      this.setState({squares: squares})\n      turns += 1\n      this.setState({turns: turns})\n      console.log(squares)\n    }\n  }\n\n\n   checkWinner = () => {\n    let { squares } = this.state\n\n    const winningCombo =\n    [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ]\n    for (let i = 0; i < winningCombo.length; i++){\n    const [a, b, c] = winningCombo[i]\n    console.log(winningCombo[i])\n    let winner = squares[a]\n      if(squares[a] === squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n        return winner\n      }\n    }\n  }\n\n  gameResult = () => {\n    let{squares, turns} = this.state\n    let winner = this.checkWinner\n      if (winner === \"x\" || winner === \"o\"){\n        alert(winner + 'is the winner')\n      }\n      else if(turns === squares.length){\n        alert( \"Cats Game\")\n      }\n\n  }\n\n\n  render() {\n    let { squares, turns } = this.state\n    let square = squares.map((square, index) => {\n      return (\n        <Square\n          handleLocation={this.handleLocation}\n          xoMark={square}\n          index={index}\n          checkWinner={this.checkWinner}\n          gameResult={this.gameResult}\n        />\n      )\n    })\n    return (\n      <React.Fragment>\n        <h1>Tic Tac Toe</h1>\n        <div id=\"gameBoard\">\n          {square}\n        </div>\n        <Message\n          gameResult={this.gameResult}\n        />\n\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}