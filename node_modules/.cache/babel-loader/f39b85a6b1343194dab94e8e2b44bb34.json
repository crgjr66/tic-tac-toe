{"ast":null,"code":"import _slicedToArray from \"/Users/learnacademy/Desktop/tic-tac-toe-team-chuck-david-ryan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe-team-chuck-david-ryan/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport Message from './components/Message';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.restartGame = () => {\n      let _this$state = this.state,\n          squares = _this$state.squares,\n          turns = _this$state.turns;\n      turns = 0;\n      this.setState({\n        turns: turns\n      });\n      squares = [...Array(9).fill(\"\")];\n      this.setState({\n        squares: squares\n      });\n    };\n\n    this.handleLocation = indexLocation => {\n      let _this$state2 = this.state,\n          squares = _this$state2.squares,\n          turns = _this$state2.turns;\n\n      if (turns === 9) {\n        alert(\"Game Over\");\n      } else if (squares[indexLocation] === \"x\" || squares[indexLocation] === \"o\") {\n        alert(\"Already Selected\");\n      } else {\n        if (turns % 2 === 0) {\n          squares[indexLocation] = \"x\";\n        } else {\n          squares[indexLocation] = \"o\";\n        }\n\n        this.setState({\n          squares: squares\n        });\n        turns += 1;\n        this.setState({\n          turns: turns\n        });\n        console.log(squares);\n      }\n    };\n\n    this.checkWinner = () => {\n      let squares = this.state.squares;\n      const winningCombo = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < winningCombo.length; i++) {\n        const _winningCombo$i = _slicedToArray(winningCombo[i], 3),\n              a = _winningCombo$i[0],\n              b = _winningCombo$i[1],\n              c = _winningCombo$i[2];\n\n        console.log(a, b, c);\n        console.log(squares);\n        let winner = squares[a];\n        console.log(winner);\n\n        if (squares[a] === 'x' && squares[b] === 'x' && squares[c] === 'x' || squares[a] === 'o' && squares[b] === 'o' && squares[c] === 'o') {\n          // if(squares[a] === squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n          console.log(\"were here\");\n          return winner;\n        }\n      }\n    };\n\n    this.gameResult = winner => {\n      let _this$state3 = this.state,\n          squares = _this$state3.squares,\n          turns = _this$state3.turns;\n\n      if (winner === \"x\" || winner === \"o\") {\n        alert(winner.toUpperCase() + ' is the winner!!!');\n      } else if (turns === squares.length) {\n        alert(\"Cats Game\");\n      }\n    };\n\n    this.state = {\n      squares: [...Array(9).fill(\"\")],\n      turns: 0\n    };\n  }\n\n  render() {\n    let _this$state4 = this.state,\n        squares = _this$state4.squares,\n        turns = _this$state4.turns;\n    let square = squares.map((square, index) => {\n      return React.createElement(Square, {\n        handleLocation: this.handleLocation,\n        xoMark: square,\n        index: index,\n        checkWinner: this.checkWinner,\n        gameResult: this.gameResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Tic Tac Toe\"), React.createElement(\"div\", {\n      id: \"gameBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, square), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Message, {\n      gameResult: this.gameResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.restartGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Restart Game\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/tic-tac-toe-team-chuck-david-ryan/src/App.js"],"names":["React","Component","Square","Message","App","constructor","props","restartGame","state","squares","turns","setState","Array","fill","handleLocation","indexLocation","alert","console","log","checkWinner","winningCombo","i","length","a","b","c","winner","gameResult","toUpperCase","render","square","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Square from './components/Square'\nimport Message from './components/Message'\nimport './App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      squares: [...Array(9).fill(\"\")],\n      turns: 0\n    }\n  }\n\n  restartGame = () => {\n    let { squares, turns} = this.state\n    turns = 0\n    this.setState({turns: turns})\n    squares = [...Array(9).fill(\"\")]\n    this.setState({squares: squares})\n  }\n\n  handleLocation = (indexLocation) => {\n    let { squares, turns } = this.state\n    if (turns === 9) {\n      alert(\"Game Over\")\n    }\n    else if (squares[indexLocation] === \"x\" || squares[indexLocation] === \"o\") {\n      alert(\"Already Selected\")\n    }\n    else {\n      if (turns % 2 === 0) {\n        squares[indexLocation] = \"x\"\n      }\n      else {\n        squares[indexLocation] = \"o\"\n      }\n      this.setState({squares: squares})\n      turns += 1\n      this.setState({turns: turns})\n      console.log(squares)\n    }\n  }\n\n\n   checkWinner = () => {\n    let { squares } = this.state\n\n    const winningCombo =\n    [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ]\n    for (let i = 0; i < winningCombo.length; i++){\n      const [a, b, c] = winningCombo[i]\n      console.log(a,b,c)\n      console.log(squares)\n      let winner = squares[a]\n      console.log(winner)\n      if ((squares[a] === 'x' && squares[b] === 'x' && squares[c] === 'x') ||\n    (squares[a] === 'o' && squares[b] === 'o' && squares[c] === 'o')){\n        // if(squares[a] === squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n          console.log(\"were here\")\n          return winner\n      }\n    }\n  }\n\n  gameResult = (winner) => {\n    let{squares, turns} = this.state\n      if (winner === \"x\" || winner === \"o\"){\n        alert(winner.toUpperCase() + ' is the winner!!!')\n      }\n      else if(turns === squares.length){\n        alert( \"Cats Game\")\n      }\n\n  }\n\n\n  render() {\n    let { squares, turns } = this.state\n    let square = squares.map((square, index) => {\n      return (\n        <Square\n          handleLocation={this.handleLocation}\n          xoMark={square}\n          index={index}\n          checkWinner={this.checkWinner}\n          gameResult={this.gameResult}\n        />\n      )\n    })\n    return (\n      <React.Fragment>\n        <h1>Tic Tac Toe</h1>\n        <div id=\"gameBoard\">\n          {square}\n        </div>\n        <br></br>\n        <Message\n          gameResult={this.gameResult}\n        />\n        <button onClick = {this.restartGame}>Restart Game</button>\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}