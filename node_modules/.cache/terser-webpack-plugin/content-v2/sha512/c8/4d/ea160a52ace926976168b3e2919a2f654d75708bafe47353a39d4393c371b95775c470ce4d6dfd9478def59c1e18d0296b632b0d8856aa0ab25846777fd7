{"map":"{\"version\":3,\"sources\":[\"/Users/learnacademy/Desktop/tic-tac-toe/src/components/Square.js\",\"/Users/learnacademy/Desktop/tic-tac-toe/src/components/Message.js\",\"/Users/learnacademy/Desktop/tic-tac-toe/src/App.js\",\"/Users/learnacademy/Desktop/tic-tac-toe/src/serviceWorker.js\",\"/Users/learnacademy/Desktop/tic-tac-toe/src/index.js\"],\"names\":[\"Square\",\"handleClick\",\"_this\",\"props\",\"handleLocation\",\"index\",\"gameResult\",\"checkWinner\",\"react_default\",\"a\",\"createElement\",\"Fragment\",\"id\",\"onClick\",\"this\",\"className\",\"xoMark\",\"Component\",\"Message\",\"App\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"restartGame\",\"_this$state\",\"state\",\"squares\",\"turns\",\"setState\",\"toConsumableArray\",\"Array\",\"fill\",\"indexLocation\",\"_this$state2\",\"alert\",\"console\",\"log\",\"winningCombo\",\"i\",\"length\",\"_winningCombo$i\",\"slicedToArray\",\"b\",\"c\",\"winner\",\"_this$state3\",\"setTimeout\",\"toUpperCase\",\"_this2\",\"square\",\"map\",\"components_Square\",\"Message_Message\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react'\\n\\nclass Square extends Component {\\n\\n  handleClick = () => {\\n    this.props.handleLocation(this.props.index)\\n    this.props.gameResult(this.props.checkWinner())\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <div id=\\\"square\\\" onClick={this.handleClick}>\\n          <p className=\\\"animate\\\">\\n            {this.props.xoMark}\\n          </p>\\n        </div>\\n      </React.Fragment >\\n    )\\n  }\\n}\\nexport default Square\\n\",\"import React, { Component } from 'react'\\n\\n\\nexport default class Message extends Component {\\n  render(){\\n    return(\\n      <>\\n        <div id= \\\"message\\\">\\n          <h2>{this.props.gameResult}</h2>\\n        </div>\\n      </>\\n    )\\n  }\\n\\n}\\n\",\"import React, { Component } from 'react'\\nimport Square from './components/Square'\\nimport Message from './components/Message'\\nimport './App.css'\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      squares: [...Array(9).fill(\\\"\\\")],\\n      turns: 0\\n    }\\n  }\\n\\n  restartGame = () => {\\n    let { squares, turns } = this.state\\n    turns = 0\\n    this.setState({ turns: turns })\\n    squares = [...Array(9).fill(\\\"\\\")]\\n    this.setState({ squares: squares })\\n  }\\n\\n  handleLocation = (indexLocation) => {\\n    let { squares, turns } = this.state\\n    if (turns === 9) {\\n      alert(\\\"Game Over\\\")\\n    }\\n    else if (squares[indexLocation] === \\\"x\\\" || squares[indexLocation] === \\\"o\\\") {\\n      alert(\\\"Already Selected\\\")\\n    }\\n    else {\\n      if (turns % 2 === 0) {\\n        squares[indexLocation] = \\\"x\\\"\\n      }\\n      else {\\n        squares[indexLocation] = \\\"o\\\"\\n      }\\n      this.setState({ squares: squares })\\n      turns += 1\\n      this.setState({ turns: turns })\\n      console.log(squares)\\n    }\\n  }\\n\\n\\n  checkWinner = () => {\\n    let { squares } = this.state\\n\\n    const winningCombo =\\n      [\\n        [0, 1, 2],\\n        [3, 4, 5],\\n        [6, 7, 8],\\n        [0, 3, 6],\\n        [1, 4, 7],\\n        [2, 5, 8],\\n        [0, 4, 8],\\n        [2, 4, 6]\\n      ]\\n    for (let i = 0; i < winningCombo.length; i++) {\\n      const [a, b, c] = winningCombo[i]\\n      //console.log(a, b, c)\\n      //console.log(squares)\\n      let winner = squares[a]\\n      //console.log(winner)\\n      if ((squares[a] === 'x' && squares[b] === 'x' && squares[c] === 'x') ||\\n        (squares[a] === 'o' && squares[b] === 'o' && squares[c] === 'o')) {\\n        // if(squares[a] === squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\\n        console.log(\\\"were here\\\")\\n        return winner\\n      }\\n    }\\n  }\\n\\n  gameResult = (winner) => {\\n    let { squares, turns } = this.state\\n    //console.log(turns)\\n    if (winner === \\\"x\\\" || winner === \\\"o\\\") {\\n      setTimeout(function () {\\n        alert(winner.toUpperCase() + ' is the winner!!!');\\n      }, 500);\\n\\n      //this.restartGame()\\n      this.setState({ turns: 9 })\\n    }\\n    else if (turns === squares.length - 1) {\\n      setTimeout(function () {\\n        alert('Cats Game!!!');\\n      }, 500);\\n    }\\n\\n  }\\n\\n\\n  render() {\\n    let { squares } = this.state\\n    let square = squares.map((square, index) => {\\n      return (\\n        <Square\\n          handleLocation={this.handleLocation}\\n          xoMark={square}\\n          index={index}\\n          checkWinner={this.checkWinner}\\n          gameResult={this.gameResult}\\n        />\\n      )\\n    })\\n    return (\\n      <React.Fragment>\\n        <h1>Tic Tac Toe</h1>\\n        <div id=\\\"gameBoard\\\">\\n          {square}\\n        </div>\\n        <br></br>\\n        <Message\\n          gameResult={this.gameResult}\\n        />\\n        <button onClick={this.restartGame}>Restart Game</button>\\n      </React.Fragment>\\n    )\\n  }\\n}\\nexport default App\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,a){e.exports=a(17)},15:function(e,t,a){},16:function(e,t,a){},17:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),o=a(8),c=a.n(o),s=(a(15),a(9)),i=a(6),l=a(1),u=a(2),m=a(4),h=a(3),d=a(5),p=function(e){function t(){var e,a;Object(l.a)(this,t);for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(a=Object(m.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(r)))).handleClick=function(){a.props.handleLocation(a.props.index),a.props.gameResult(a.props.checkWinner())},a}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(\"div\",{id:\"square\",onClick:this.handleClick},r.a.createElement(\"p\",{className:\"animate\"},this.props.xoMark)))}}]),t}(n.Component),f=function(e){function t(){return Object(l.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(\"div\",{id:\"message\"},r.a.createElement(\"h2\",null,this.props.gameResult)))}}]),t}(n.Component),b=(a(16),function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(m.a)(this,Object(h.a)(t).call(this,e))).restartGame=function(){var e=a.state,t=e.squares;e.turns;a.setState({turns:0}),t=Object(i.a)(Array(9).fill(\"\")),a.setState({squares:t})},a.handleLocation=function(e){var t=a.state,n=t.squares,r=t.turns;9===r?alert(\"Game Over\"):\"x\"===n[e]||\"o\"===n[e]?alert(\"Already Selected\"):(n[e]=r%2===0?\"x\":\"o\",a.setState({squares:n}),r+=1,a.setState({turns:r}),console.log(n))},a.checkWinner=function(){for(var e=a.state.squares,t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],n=0;n<t.length;n++){var r=Object(s.a)(t[n],3),o=r[0],c=r[1],i=r[2],l=e[o];if(\"x\"===e[o]&&\"x\"===e[c]&&\"x\"===e[i]||\"o\"===e[o]&&\"o\"===e[c]&&\"o\"===e[i])return console.log(\"were here\"),l}},a.gameResult=function(e){var t=a.state,n=t.squares,r=t.turns;\"x\"===e||\"o\"===e?(setTimeout(function(){alert(e.toUpperCase()+\" is the winner!!!\")},500),a.setState({turns:9})):r===n.length-1&&setTimeout(function(){alert(\"Cats Game!!!\")},500)},a.state={squares:Object(i.a)(Array(9).fill(\"\")),turns:0},a}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this,t=this.state.squares.map(function(t,a){return r.a.createElement(p,{handleLocation:e.handleLocation,xoMark:t,index:a,checkWinner:e.checkWinner,gameResult:e.gameResult})});return r.a.createElement(r.a.Fragment,null,r.a.createElement(\"h1\",null,\"Tic Tac Toe\"),r.a.createElement(\"div\",{id:\"gameBoard\"},t),r.a.createElement(\"br\",null),r.a.createElement(f,{gameResult:this.gameResult}),r.a.createElement(\"button\",{onClick:this.restartGame},\"Restart Game\"))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,1,2]]]);","extractedComments":[]}